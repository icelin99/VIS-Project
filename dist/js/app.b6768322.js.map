{"version":3,"file":"js/app.b6768322.js","mappings":"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","sources":["webpack://vis-project/./src/App.vue","webpack://vis-project/./src/components/FilterPanel.vue","webpack://vis-project/./src/components/FilterPanel.vue?4a54","webpack://vis-project/./src/components/FDG.vue","webpack://vis-project/./src/components/FDG.vue?86bf","webpack://vis-project/./src/components/SubGraphs.vue","webpack://vis-project/./src/components/SubGraphs.vue?8b69","webpack://vis-project/./src/components/NetworkGraph.vue","webpack://vis-project/./src/components/NetworkGraph.vue?0198","webpack://vis-project/./src/components/ParallelCoordinates.vue","webpack://vis-project/./src/components/ParallelCoordinates.vue?d211","webpack://vis-project/./src/App.vue?7ccd","webpack://vis-project/./src/store/index.js","webpack://vis-project/./src/main.js","webpack://vis-project/webpack/bootstrap","webpack://vis-project/webpack/runtime/chunk loaded","webpack://vis-project/webpack/runtime/compat get default export","webpack://vis-project/webpack/runtime/define property getters","webpack://vis-project/webpack/runtime/global","webpack://vis-project/webpack/runtime/hasOwnProperty shorthand","webpack://vis-project/webpack/runtime/make namespace object","webpack://vis-project/webpack/runtime/jsonp chunk loading","webpack://vis-project/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"header-container\">\n      <h1 class=\"title\">Vast Challenge 2023 MC1</h1>\n    </div>\n\n    <div class=\"main-container\">\n      <div class=\"left-panel\">\n        <div class=\"left-top-container\">\n          <div class=\"filter-panel\">\n            <FilterPanel />\n          </div>\n          <div class=\"fdg-container\">\n            <FDG />\n          </div>\n        </div>\n        <div class=\"left-bottom-container\">\n          <div class=\"subgraphs-container\">\n            <SubGraphs />\n          </div>\n        </div>\n      </div>\n      <div class=\"right-panel\">\n        <div class=\"network-wrapper\">\n          <NetworkGraph />\n        </div>\n        <div class=\"parallel-wrapper\">\n          <ParallelCoordinates :nodes=\"coefData\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FilterPanel from './components/FilterPanel.vue'\nimport FDG from './components/FDG.vue'\nimport SubGraphs from './components/SubGraphs.vue'\nimport NetworkGraph from './components/NetworkGraph.vue'\nimport ParallelCoordinates from './components/ParallelCoordinates.vue'\nimport { useStore } from 'vuex'\nimport linksData from './assets/tree_relation.json'\nimport nodesData from './assets/tree_nodes.json'\nimport coefData from './assets/nodes_coef.json'\n\nexport default {\n  name: 'App',\n  components: {\n      FilterPanel,\n      FDG,\n      SubGraphs,\n      NetworkGraph,\n      ParallelCoordinates\n    },\n  setup() {\n    const store = useStore()\n    return { \n      store,\n      linksData,\n      nodesData,\n      coefData\n    }\n  },\n  async mounted() {\n    console.log('App 组件挂载，开始加载数据...')\n    await this.store.dispatch('loadData')\n    console.log('数据加载完成')\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n\n.header-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 60px;\n  background-color: #2c3e50;\n  padding: 0 20px;\n}\n\n.title {\n  margin: 0;\n  color: white;\n  font-size: 24px;\n  line-height: 60px;\n}\n\n/* 修改后的选项卡导航样式 */\n.tab-navigation {\n  display: flex;\n  gap: 10px;\n}\n\n.main-container {\n  display: flex;\n  gap: 10px;\n  background-color: #e6effe;\n  height: calc(100vh - 60px); /* 减去header高度 */\n  padding: 10px;\n  box-sizing: border-box;\n  width: 100%;\n}\n\n.left-panel {\n  display: flex;\n  flex-direction: column;\n  gap: 7px;\n  width: 68%;\n  height: 100%;\n}\n\n.left-top-container {\n  display: flex;\n  flex-direction: row; /* 横向排列 */\n  gap: 10px;\n  height: 70%; /* 占83%高度 */\n}\n\n.left-bottom-container {\n  height: 30%; /* 占17%高度 */\n}\n\n.filter-panel {\n  background: white;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  width: calc(30% - 20px); /* filter panel占left-top的30% */\n  height: calc(100% - 30px);\n}\n\n.fdg-container {\n  background: white;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  width: calc(70% - 20px); /* filter panel占left-top的30% */\n  height: calc(100% - 30px);\n}\n\n.subgraphs-container {\n  background: white;\n  border-radius: 4px;\n  width: calc(100% - 5px); /* filter panel占left-top的30% */\n  height: calc(100% - 5px);\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n\n}\n\n.right-panel {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 32%;\n  height: 100%;\n}\n\n.network-wrapper {\n  flex: 1;\n  background: white;\n  border-radius: 4px;\n  padding: 10px;\n  width: calc(100% - 20px); /* filter panel占left-top的30% */\n  height: calc(100% - 30px);\n}\n\n.parallel-wrapper {\n  background: white;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  flex: 1;\n  width: calc(100% - 30px); /* filter panel占left-top的30% */\n  height: calc(100% - 30px);\n}\n\n/* 确保所有容器内的组件能填充整个空间 */\n.filter-panel > *,\n.fdg-container > *,\n.subgraphs-container > *,\n.network-container > *,\n.parallel-container > * {\n  width: 100%;\n  height: 100%;\n}\n\n/* 确保subgraphs中的每个子图都能正确显示 */\n.subgraph {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.content-wrapper h2 {\n  margin: 0;\n  color: #2c3e50;\n  font-size: 18px;\n  text-align: left;\n}\n\n.content-placeholder {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #666;\n  font-size: 16px;\n  background: #f8f9fa;\n  border-radius: 4px;\n  padding: 20px;\n}\n</style>","<template>\n    <div class=\"filter-panel-container\">\n        <div class=\"filter-item\">\n            <h3>Select Node</h3>\n            <div class=\"checkbox-container\">\n                <label class=\"checkbox-item\" v-for=\"node in nodes\" :key=\"node.value\">\n                    <input type=\"checkbox\" v-model=\"selectedNodes\" :value=\"node.value\">\n                    <span>{{ node.label }}</span>\n                    <span class=\"type-color-dot\" :style=\"{ backgroundColor: typeColors[node.value] }\"></span>\n                </label>\n            </div>\n        </div>\n        <!-- <div class=\"filter-item\">\n            <h3>Select Relation</h3>\n            <div class=\"checkbox-container\">\n                <label class=\"checkbox-item\" v-for=\"relation in relations\" :key=\"relation.value\">\n                    <input type=\"checkbox\" v-model=\"selectedRelations\" :value=\"relation.value\">\n                    <span>{{ relation.label }}</span>\n                </label>\n            </div>\n        </div> -->\n        <div class=\"filter-item\" v-if=\"mounted\">\n            <h3>Select Country</h3>\n            <el-select\n                v-model=\"selectedCountries\"\n                multiple\n                clearable\n                collapse-tags\n                :max-collapse-tags=\"3\"\n                placeholder=\"Select countries\"\n                popper-class=\"custom-header\"\n                class=\"country-select\"\n                :teleported=\"false\"\n                :fit-input-width=\"true\"\n                :popper-append-to-body=\"false\"\n                :reserve-keyword=\"false\"\n                :popperOptions=\"{\n                    modifiers: [\n                        {\n                            name: 'computeStyles',\n                            options: {\n                                adaptive: false,\n                                gpuAcceleration: false\n                            }\n                        }\n                    ]\n                }\"\n            >\n                <template #header>\n                    <el-checkbox\n                        v-model=\"checkAll\"\n                        :indeterminate=\"indeterminate\"\n                        @change=\"handleCheckAll\"\n                    >\n                        All\n                    </el-checkbox>\n                </template>\n                <el-option\n                    v-for=\"country in countries\"\n                    :key=\"country.value\"\n                    :label=\"country.label\"\n                    :value=\"country.value\"\n                />\n            </el-select>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport { ElSelect, ElOption, ElCheckbox } from 'element-plus'\n\nexport default {\n    name: 'FilterPanel',\n    components: {\n        ElSelect,\n        ElOption,\n        ElCheckbox\n    },\n    computed: {\n        ...mapState(['originalNodes', 'countries']),\n        nodeTypes() {\n            return [...new Set(this.originalNodes.map(node => node.type))]\n                .filter(Boolean)\n                .map(type => ({value: type, label: type}))\n        }\n    },\n    data() {\n        return {\n            mounted: false,\n            selectedNodes: ['person', 'organization'],\n            selectedRelations: [],\n            selectedCountries: [],\n            checkAll: false,\n            indeterminate: false,\n            typeColors: {\n                'person': '#FFB6C1',\n                'organization': '#4ECDC4',\n                'company': '#45B7D1',\n                'political_organization': '#96CEB4',\n                'location': '#FFEEAD',\n                'vessel': '#D4A5A5',\n                'event': '#9B59B6',\n                'movement': '#3498DB',\n                'unknown': '#95A5A6'\n            },\n            nodes: [\n                { value: 'person', label: 'Person' },\n                { value: 'organization', label: 'Organization' },\n                { value: 'company', label: 'Company' },\n                { value: 'political_organization', label: 'Political Organization' },\n                { value: 'location', label: 'Location' },\n                { value: 'vessel', label: 'Vessel' },\n                { value: 'event', label: 'Event' },\n                { value: 'movement', label: 'Movement' },\n                { value: 'unknown', label: 'Unknown' },\n            ],\n            relations: [\n                { value: 'membership', label: 'Membership' },\n                { value: 'partnership', label: 'Partnership' },\n                { value: 'ownership', label: 'Ownership' },\n                { value: 'family relationship', label: 'Family Relationship' },\n            ]\n        }\n    },\n    mounted() {\n        this.$nextTick(() => {\n            this.mounted = true;\n        });\n    },\n    watch: {\n        selectedNodes() {\n            console.log(\"selectedNodes-------\", this.selectedNodes)\n            this.handleFilterChange();\n        },\n        selectedRelations() {\n            this.handleFilterChange();\n        },\n        selectedCountries: {\n            handler(val) {\n                if (val.length === 0) {\n                    this.checkAll = false;\n                    this.indeterminate = false;\n                } else if (val.length === this.countries.length) {\n                    this.checkAll = true;\n                    this.indeterminate = false;\n                } else {\n                    this.indeterminate = true;\n                }\n                this.handleFilterChange();\n            },\n            deep: true\n        },\n        countries: {\n            immediate: true,\n            handler(newCountries) {\n                if (newCountries && newCountries.length > 0) {\n                    this.selectedCountries = newCountries.map(country => country.value);\n                    this.checkAll = true;\n                }\n            }\n        }\n    },\n    methods: {\n        ...mapActions(['applyFilters']),\n        handleCheckAll(val) {\n            this.indeterminate = false;\n            if (val) {\n                this.selectedCountries = this.countries.map(country => country.value);\n            } else {\n                this.selectedCountries = [];\n            }\n        },\n        handleFilterChange() {\n            this.$store.commit('setFilterConditions', {\n                nodeTypes: this.selectedNodes,\n                countries: this.selectedCountries\n            });\n            console.log(\"更新筛选条件\", this.selectedNodes, this.selectedCountries)\n            this.applyFilters();\n        }\n    }\n}\n</script>\n\n<style scoped>\n.filter-panel-container {\n    height: 100%;\n    width: 95%;\n    overflow: hidden;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    padding: 10px;\n    padding-right: 10px;\n}\n\n.filter-item {\n    position: relative;\n    width: 100%;\n}\n\nh2 {\n    font-size: 18px;\n    color: #333;\n    margin-bottom: 15px;\n}\n\nh3 {\n    font-size: 14px;\n    color: #666;\n    margin-bottom: 10px;\n}\n\n.checkbox-container {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    text-align: left;\n    margin-bottom: 8px;\n    width: 100%;\n    overflow-y: auto;\n    max-height: 260px;\n    padding-right: 10px; /* 为滚动条预留空间 */\n}\n\n.checkbox-item {\n    display: grid;\n    grid-template-columns: 20px 1fr 16px;\n    align-items: center;\n    gap: 6px;\n    width: 100%;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    cursor: pointer;\n    border-radius: 4px;\n    transition: all 0.3s;\n    background: #f5f7fa;\n}\n\n.checkbox-item:hover {\n    background-color: #ecf5ff;\n}\n\n.checkbox-item input[type=\"checkbox\"] {\n    margin: 0;\n    width: 14px;\n    height: 14px;\n}\n\n.checkbox-item span:not(.type-color-dot) {\n    font-size: 12px;\n    color: #606266;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding-right: 4px;\n}\n\n.type-color-dot {\n    display: block;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    box-sizing: content-box;\n    flex: none;\n    justify-self: end;\n}\n\n.country-select {\n    width: 100%;\n    transform: none !important;\n    transition: none !important;\n}\n\n:deep(.el-select) {\n    width: 100%;\n}\n\n:deep(.el-select .el-select__tags) {\n    max-width: 90%;\n    flex-wrap: nowrap;\n    overflow: hidden;\n}\n\n:deep(.el-select-dropdown.el-popper) {\n    max-width: 100%;\n    min-width: 100% !important;\n    transform: none !important;\n    transition: none !important;\n}\n\n:deep(.el-select .el-select__wrapper) {\n    max-width: 100%;\n}\n\n:deep(.custom-header) {\n    padding: 4px 8px;\n    border-bottom: 1px solid #eee;\n    margin-bottom: 4px;\n}\n\n:deep(.el-select-dropdown__item) {\n    padding: 0 8px;\n    height: 28px;\n    line-height: 28px;\n    font-size: 12px;\n}\n\n:deep(.el-select__tags-text) {\n    font-size: 12px;\n}\n\n:deep(.el-tag) {\n    height: 20px;\n    line-height: 20px;\n    padding: 0 4px;\n}\n</style>","import { render } from \"./FilterPanel.vue?vue&type=template&id=fc330070&scoped=true\"\nimport script from \"./FilterPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FilterPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FilterPanel.vue?vue&type=style&index=0&id=fc330070&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fc330070\"]])\n\nexport default __exports__","<template>\n    <div class=\"visualization-panel\">\n        <div class=\"vis-container\">\n            <div id=\"force-directed-graph\"></div>\n            <div id=\"graph-tooltip\"></div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport { mapState } from 'vuex'\nexport default {\n    name: 'FDG',\n    computed: {\n        ...mapState(['filteredNodes', 'filteredLinks', 'selectedNodeId'])\n    },\n    data() {\n        return {\n            simulation: null,\n            svg: null,\n            width: 0,\n            height: 0,\n            currentNodes: [],\n            typeColors: {\n                'person': '#FFB6C1',\n                'organization': '#4ECDC4',\n                'company': '#45B7D1',\n                'political_organization': '#96CEB4',\n                'location': '#FFEEAD',\n                'vessel': '#D4A5A5',\n                'event': '#9B59B6',\n                'movement': '#3498DB',\n                'unknown': '#95A5A6'\n            },\n            linkColors: {\n                'membership': '#B0C4DE',     \n                'partnership': '#A8D4B2',    \n                'ownership': '#C7B8E0',       \n                'family_relationship': '#C2B8A3'  \n            }\n        }\n    },\n    mounted() {\n        const container = document.getElementById('force-directed-graph')\n        this.width = container.clientWidth\n        this.height = container.clientHeight\n        this.initGraph()\n        this.handleResize() // 初始化时调用一次 handleResize 获取容器尺寸\n        window.addEventListener('resize', this.handleResize)\n    },\n    beforeUnmount() {\n        window.removeEventListener('resize', this.handleResize)\n    },\n    watch: {\n        filteredNodes: {\n        handler(newNodes) {\n                if (newNodes && newNodes.length > 0) {\n            this.updateVisualization()\n            }\n            },\n            immediate: true\n        },\n        selectedNodeId: {\n            handler(newId) {\n                // 更新节点样式\n                this.svg.selectAll('.node circle')\n                    .transition()\n                    .duration(200)\n                    .style('stroke', d => d.id === newId ? '#FF0000' : '#fff')\n                    .style('stroke-width', d => d.id === newId ? 3 : 1.5);\n            }\n        }\n    },\n    methods: {\n        handleResize() {\n            const container = document.getElementById('force-directed-graph')\n            this.width = container.clientWidth\n            this.height = container.clientHeight\n\n            this.svg\n                .attr('width', this.width)\n                .attr('height', this.height)\n\n             // 更新力导向图中心点\n            if (this.simulation) {\n                this.simulation.force('center', d3.forceCenter(this.width / 2, this.height / 2))\n                this.simulation.alpha(0.3).restart()\n            }\n        },\n        initGraph() {\n            const container = document.getElementById('force-directed-graph')\n            this.width = container.clientWidth\n            this.height = container.clientHeight\n\n            this.svg = d3.select('#force-directed-graph')\n                .append('svg')\n                .attr('width', this.width)\n                .attr('height', this.height)\n\n            // add zoom behavior\n            this.svg.append('g')\n                .attr('class', 'graph-container')\n\n            this.svg.call(d3.zoom()\n                .scaleExtent([0.1, 4])\n                .on('zoom', (event) => {\n                    this.svg.select('.graph-container')\n                        .attr('transform', event.transform)\n                }))\n        },\n        createGraph() {\n            const data_nodes = this.filteredNodes\n            const data_links = this.filteredLinks\n            \n            // 找出最大和最小连接数\n            const linkCounts = this.filteredNodes.map(node => node.linkCount);\n            const maxLinks = Math.max(...linkCounts);\n            const minLinks = Math.min(...linkCounts);\n\n            // 创建半径和中心力的比例尺\n            const radiusScale = d3.scaleLinear()\n                .domain([minLinks, maxLinks])\n                .range([5, 20]); // 节点半径范围：5-20\n\n            console.log('节点连接数统计：', {\n                maxLinks,\n                minLinks,\n                nodeCounts: this.filteredNodes\n                    .sort((a, b) => b.linkCount - a.linkCount)\n                    .slice(0, 10)\n                    .map(node => ({id: node.id, count: node.linkCount}))\n            });\n            \n            // 首先找出所有边的权重范围\n            const weights = data_links.map(d => d.weight);\n            const maxWeight = Math.max(...weights);\n            const minWeight = Math.min(...weights);\n            console.log('边的权重范围：', { minWeight, maxWeight });\n\n            // 创建权重到距离的线性映射\n            const distanceScale = d3.scaleLinear()\n                .domain([minWeight, maxWeight])\n                .range([150, 50]); // 增加整体距离范围\n\n            this.simulation = d3.forceSimulation(data_nodes)\n                .force('link', d3.forceLink(data_links)\n                    .id(d => d.id)\n                    .distance(d => distanceScale(d.weight))\n                    .strength(0.5))\n                .force('charge', d3.forceManyBody()\n                    .strength(d => d.linkCount < 15 ? -30 : -100)\n                    .distanceMin(10)\n                    .distanceMax(200))\n                .force('center', d3.forceCenter(this.width / 2, this.height / 2))\n                .force('collision', d3.forceCollide()\n                    .radius(d => radiusScale(d.linkCount) + 5)\n                    .strength(0.5))\n                .force('x', d3.forceX(this.width / 2).strength(0.02))\n                .force('y', d3.forceY(this.height / 2).strength(0.02))\n                .alpha(1)\n                .alphaDecay(0.01)\n                .velocityDecay(0.3)\n                .restart();\n\n            // 确保节点没有固定位置\n            data_nodes.forEach(node => {\n                node.fx = null;\n                node.fy = null;\n            });\n\n            const container = this.svg.select('.graph-container')\n\n            // 保存 this 的引用\n            const self = this;\n\n            // 创建连线\n            const links = container.selectAll('.link')\n                .data(data_links)\n                .enter()\n                .append('line')\n                .attr('class', 'link')\n                .style('stroke', (d) => {\n                    if (d.weight > 0.99) {\n                        return '#FF0000'; // 高权重用红色\n                    }\n                    return self.linkColors[d.type];\n                })\n                .style('stroke-opacity', d => d.weight > 0.99 ? 0.8 : 0.3)\n                .style('stroke-width', d => {\n                    if (d.weight > 0.99) {\n                        return d.weight * 4; // 高权重的连接加粗\n                    }\n                    return d.weight * 2;\n                })\n                .on('mouseover', (event, d) => {\n                    // 高亮当前边\n                    d3.select(event.target)\n                        .style('stroke-opacity', 1)\n                        .style('stroke', (d) => {\n                            if (d.weight > 0.99) {\n                                return '#FF0000';\n                            }\n                            return self.linkColors[d.type];\n                        });\n\n                    // 高亮相连节点\n                    const nodes = container.selectAll('.node')\n                        .filter(node => node.id === d.source.id || node.id === d.target.id);\n                    nodes.each((node, i, elements) => {\n                        const el = d3.select(elements[i]);\n                        el.select('circle')\n                            .transition()\n                            .duration(200)\n                            .attr('r', node => radiusScale(node.linkCount) * 1.5);\n                        el.select('text')\n                            .transition()\n                            .duration(200)\n                            .style('font-weight', 'bold');\n                    });\n\n                    // 显示tooltip\n                    const tooltip = d3.select('#graph-tooltip');\n                    tooltip.style('display', 'block')\n                        .html(`\n                            <div class=\"tooltip-content\">\n                                <div>Source: ${d.source.id}</div>\n                                <div>Target: ${d.target.id}</div>\n                                <div>Type: ${d.type || 'Unknown'}</div>\n                                <div>Weight: ${d.weight?.toFixed(4) || 'N/A'}</div>\n                                <div>Distance: ${distanceScale(d.weight)?.toFixed(4) || 'N/A'}</div>\n                                <div>Color: ${self.linkColors[d.type] || '#999'}</div>\n                            </div>\n                        `)\n                        .style('left', (event.pageX + 10) + 'px')\n                        .style('top', (event.pageY - 10) + 'px');\n                })\n                .on('mouseout', (event, d) => {\n                    // 恢复边的样式\n                    d3.select(event.target)\n                        .style('stroke-opacity', 0.3);\n\n                    // 恢复节点样式\n                    const nodes = container.selectAll('.node')\n                        .filter(node => node.id === d.source.id || node.id === d.target.id);\n                    nodes.each((node, i, elements) => {\n                        const el = d3.select(elements[i]);\n                        el.select('circle')\n                            .transition()\n                            .duration(200)\n                            .attr('r', node => radiusScale(node.linkCount));\n                        el.select('text')\n                            .transition()\n                            .duration(200)\n                            .style('font-size', node => {\n                                const size = (node.linkCount - minLinks) / (maxLinks - minLinks) * 4 + 8;\n                                return `${size}px`;\n                            })\n                            .style('font-weight', 'normal');\n                    });\n\n                    // 隐藏tooltip\n                    d3.select('#graph-tooltip').style('display', 'none');\n                });\n\n            // 修改节点组创建\n            const nodes = container.selectAll('.node')\n                .data(data_nodes)\n                .enter()\n                .append('g')\n                .attr('class', 'node')\n                .call(d3.drag()\n                    .on('start', this.dragStarted)\n                    .on('drag', this.dragged)\n                    .on('end', this.dragEnded))\n                .on('click', this.handleNodeClick)\n                .on('dblclick', (event, d) => {  // 修改双击事件\n                    event.preventDefault();\n                    const cycles = this.findCycles(d.id);\n                    if (cycles.length > 0) {\n                        this.highlightCycles(cycles, d.id);\n                    } else {\n                        this.clearHighlights();\n                    }\n                });\n\n            // 添加节点圆圈\n            nodes.append('circle')\n                .attr('r', d => radiusScale(d.linkCount))\n                .style('fill', d => this.typeColors[d.type] || '#95A5A6')\n                .style('stroke', d => d.id === this.selectedNodeId ? '#FF0000' : '#fff')  // 选中节点红色边框\n                .style('stroke-width', d => d.id === this.selectedNodeId ? 3 : 1.5);  // 选中节点边框加粗\n\n            // 添加节点标签\n            // nodes.append('text')\n            //     .text(d => d.id)\n            //     .attr('dx', d => radiusScale(d.linkCount) + 2)\n            //     .attr('dy', 4)\n            //     .style('font-family', 'Arial, sans-serif')\n            //     .style('font-size', d => {\n            //         // 连接数越多，文字越大\n            //         const size = (d.linkCount - minLinks) / (maxLinks - minLinks) * 4 + 8;\n            //         return `${size}px`;\n            //     });\n\n            // 添加节点的hover事件\n            nodes.on('mouseover', (event, d) => {\n                // 高亮当前节点\n                const currentNode = d3.select(event.currentTarget);\n                currentNode.select('circle')\n                    .transition()\n                    .duration(200)\n                    .attr('r', node => radiusScale(node.linkCount) * 1.5);\n                currentNode.select('text')\n                    .transition()\n                    .duration(200)\n                    .style('font-weight', 'bold');\n\n                // 高亮相关连接\n                const links = container.selectAll('.link')\n                    .filter(link => link.source.id === d.id || link.target.id === d.id);\n                links.style('stroke-opacity', 1)\n                    .style('stroke', link => {\n                        if (link.weight > 0.99) {\n                            return '#FF0000';\n                        }\n                        return self.linkColors[link.type];\n                    });\n\n                // 显示tooltip\n                const tooltip = d3.select('#graph-tooltip');\n                tooltip.style('display', 'block')\n                    .html(`\n                        <div class=\"tooltip-content\">\n                            <div>ID: ${d.id}</div>\n                            <div>Type: ${d.type || 'Unknown'}</div>\n                            <div>Country: ${d.country || 'N/A'}</div>\n                            <div>Connections: ${d.linkCount}</div>\n                        </div>\n                    `)\n                    .style('left', (event.pageX + 10) + 'px')\n                    .style('top', (event.pageY - 10) + 'px');\n            })\n            .on('mouseout', (event, d) => {\n                // 恢复节点样式\n                const currentNode = d3.select(event.currentTarget);\n                currentNode.select('circle')\n                    .transition()\n                    .duration(200)\n                    .attr('r', node => radiusScale(node.linkCount));\n                currentNode.select('text')\n                    .transition()\n                    .duration(200)\n                    .style('font-size', node => {\n                        const size = (node.linkCount - minLinks) / (maxLinks - minLinks) * 4 + 8;\n                        return `${size}px`;\n                    })\n                    .style('font-weight', 'normal');\n\n                // 恢复连接样式\n                const links = container.selectAll('.link')\n                    .filter(link => link.source.id === d.id || link.target.id === d.id);\n                links.style('stroke-opacity', d => d.weight > 0.99 ? 0.8 : 0.3)\n                    .style('stroke', link => {\n                        if (link.weight > 0.99) {\n                            return '#FF0000';\n                        }\n                        return self.linkColors[link.type];\n                    });\n\n                // 隐藏tooltip\n                d3.select('#graph-tooltip').style('display', 'none');\n            });\n\n            this.simulation.on('tick', () => {\n                links\n                    .attr('x1', d => d.source.x)\n                    .attr('y1', d => d.source.y)\n                    .attr('x2', d => d.target.x)\n                    .attr('y2', d => d.target.y)\n                nodes\n                    .attr('transform', d => `translate(${d.x}, ${d.y})`)\n            })\n        },\n        dragStarted(event, d) {\n            if (!event.active) this.simulation.alphaTarget(0.3).restart()\n            d.fx = d.x\n            d.fy = d.y\n        },\n        dragged(event, d) {\n            d.fx = event.x\n            d.fy = event.y\n        },\n        dragEnded(event, d) {\n            if (!event.active) this.simulation.alphaTarget(0)\n            d.fx = null\n            d.fy = null\n        },\n        updateVisualization() {\n            if (this.simulation) {\n                this.simulation.stop()\n            }\n\n            // 清除svg\n            d3.select('.graph-container').selectAll('*').remove()\n\n            // 只在有数据时创建图\n            if (this.filteredNodes.length > 0) {\n                console.log(\"更新FDG\")\n                this.createGraph()\n            }\n        },\n        handleNodeClick(event, d) {\n            // 提交选中的节点ID\n            this.$store.commit('setSelectedNodeId', d.id);\n            \n            // 高亮相关连接\n            const container = this.svg.select('.graph-container');\n            \n            // 高亮相连的边\n            container.selectAll('.link')\n                .transition()\n                .duration(200)\n                .style('stroke-opacity', link => \n                    (link.source.id === d.id || link.target.id === d.id) \n                    ? (link.weight > 0.99 ? 1 : 0.8)  // 相连的边更不透明\n                    : (link.weight > 0.99 ? 0.8 : 0.3) // 其他边保持原样\n                )\n                .style('stroke-width', link => {\n                    if (link.source.id === d.id || link.target.id === d.id) {\n                        return link.weight > 0.99 ? link.weight * 6 : link.weight * 4;  // 相连的边更粗\n                    }\n                    return link.weight > 0.99 ? link.weight * 4 : link.weight * 2;  // 其他边保持原样\n                });\n        },\n        // 添加环路检测方法\n        findCycles(startNodeId) {\n            const visited = new Set();\n            const cycles = [];\n            const path = [];\n            const pathSet = new Set();\n            \n            // 构建邻接表\n            const adjList = new Map();\n            this.filteredLinks.forEach(link => {\n                if (!adjList.has(link.source.id)) {\n                    adjList.set(link.source.id, []);\n                }\n                if (!adjList.has(link.target.id)) {\n                    adjList.set(link.target.id, []);\n                }\n                adjList.get(link.source.id).push({\n                    node: link.target.id,\n                    link: link\n                });\n                adjList.get(link.target.id).push({\n                    node: link.source.id,\n                    link: link\n                });\n            });\n\n            const dfs = (nodeId, parent) => {\n                visited.add(nodeId);\n                path.push(nodeId);\n                pathSet.add(nodeId);\n\n                const neighbors = adjList.get(nodeId) || [];\n                for (const neighbor of neighbors) {\n                    if (neighbor.node === parent) continue;\n\n                    if (pathSet.has(neighbor.node)) {\n                        // 找到环\n                        const cycleStart = path.indexOf(neighbor.node);\n                        const cycle = path.slice(cycleStart);\n                        cycle.push(neighbor.node); // 完成环\n                        cycles.push(cycle);\n                    } else if (!visited.has(neighbor.node)) {\n                        dfs(neighbor.node, nodeId);\n                    }\n                }\n\n                path.pop();\n                pathSet.delete(nodeId);\n            };\n\n            dfs(startNodeId, null);\n            return cycles;\n        },\n\n        // 高亮环路上的节点和边\n        highlightCycles(cycles, clickedNodeId) {\n            const container = this.svg.select('.graph-container');\n            const cycleNodes = new Set(cycles.flat());\n            const cycleEdges = new Set();\n\n            // 先重置所有节点和边的样式\n            container.selectAll('.node circle')\n                .transition()\n                .duration(200)\n                .style('stroke', '#fff')\n                .style('stroke-width', 1.5);\n\n            container.selectAll('.link')\n                .transition()\n                .duration(200)\n                .style('stroke-opacity', d => d.weight > 0.99 ? 0.8 : 0.3)\n                .style('stroke-width', d => d.weight > 0.99 ? d.weight * 4 : d.weight * 2);\n\n            // 找出环路中的边\n            cycles.forEach(cycle => {\n                for (let i = 0; i < cycle.length - 1; i++) {\n                    cycleEdges.add(`${cycle[i]}-${cycle[i + 1]}`);\n                    cycleEdges.add(`${cycle[i + 1]}-${cycle[i]}`);\n                }\n            });\n\n            // 高亮节点\n            container.selectAll('.node circle')\n                .transition()\n                .duration(200)\n                .style('stroke', d => {\n                    if (d.id === clickedNodeId) return '#FF0000';  // 双击的节点用红色\n                    return cycleNodes.has(d.id) ? '#FFD700' : '#fff';  // 环路上的其他节点用黄色\n                })\n                .style('stroke-width', d => cycleNodes.has(d.id) ? 3 : 1.5);\n\n            // 高亮边\n            container.selectAll('.link')\n                .transition()\n                .duration(200)\n                .style('stroke-opacity', d => {\n                    const edgeId1 = `${d.source.id}-${d.target.id}`;\n                    const edgeId2 = `${d.target.id}-${d.source.id}`;\n                    return cycleEdges.has(edgeId1) || cycleEdges.has(edgeId2) ? 1 : 0.3;\n                })\n                .style('stroke-width', d => {\n                    const edgeId1 = `${d.source.id}-${d.target.id}`;\n                    const edgeId2 = `${d.target.id}-${d.source.id}`;\n                    return cycleEdges.has(edgeId1) || cycleEdges.has(edgeId2) ? \n                        (d.weight > 0.99 ? d.weight * 4 : d.weight * 2) : \n                        (d.weight > 0.99 ? d.weight * 4 : d.weight * 2);\n                });\n        },\n\n        // 清除所有高亮效果\n        clearHighlights() {\n            const container = this.svg.select('.graph-container');\n            \n            container.selectAll('.node circle')\n                .transition()\n                .duration(200)\n                .style('stroke', '#fff')\n                .style('stroke-width', 1.5);\n\n            container.selectAll('.link')\n                .transition()\n                .duration(200)\n                .style('stroke-opacity', d => d.weight > 0.99 ? 0.8 : 0.3)\n                .style('stroke-width', d => d.weight > 0.99 ? d.weight * 4 : d.weight * 2);\n        }\n    }\n}\n</script>\n\n<style scoped>\n.visualization-panel {\n    height: 100%;\n}\n\n.vis-container {\n    height: 100%;\n}\n\n#force-directed-graph {\n    width: 100%;\n    height: calc(100% - 10px);\n    border-radius: 4px;\n    background: #f9f9f9;\n}\n\n.node:hover {\n    cursor: pointer;\n}\n\n.node circle {\n    stroke: #fff;\n    stroke-width: 2px;\n}\n\n.node text {\n    pointer-events: none;\n}\n\n#graph-tooltip {\n    position: absolute;\n    display: none;\n    background: rgba(255, 255, 255, 0.95);\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    padding: 10px;\n    font-size: 12px;\n    pointer-events: none;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n    z-index: 1000;\n}\n\n.tooltip-content {\n    line-height: 1.5;\n}\n\n.tooltip-content div {\n    margin: 2px 0;\n}\n\n.link {\n    transition: all 0.2s;\n}\n\n.node circle {\n    transition: all 0.2s;\n}\n\n.node text {\n    transition: all 0.2s;\n}\n</style>","import { render } from \"./FDG.vue?vue&type=template&id=13996a30&scoped=true\"\nimport script from \"./FDG.vue?vue&type=script&lang=js\"\nexport * from \"./FDG.vue?vue&type=script&lang=js\"\n\nimport \"./FDG.vue?vue&type=style&index=0&id=13996a30&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-13996a30\"]])\n\nexport default __exports__","<template>\n    <div class=\"subgraphs-container\">\n        <div class=\"subgraph\">\n            <div id=\"subgraph-membership\" class=\"subgraph-vis\"></div>\n        </div>\n        <div class=\"subgraph\">\n            <div id=\"subgraph-partnership\" class=\"subgraph-vis\"></div>\n        </div>\n        <div class=\"subgraph\">\n            <div id=\"subgraph-ownership\" class=\"subgraph-vis\"></div>\n        </div>\n        <div class=\"subgraph\">\n            <div id=\"subgraph-family-relationship\" class=\"subgraph-vis\"></div>\n        </div>\n        <div id=\"subgraph-tooltip\"></div>\n    </div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'SubGraphs',\n    data() {\n        return {\n            simulations: {},\n            svgs: {},\n            width: 0,\n            height: 0,\n            linkTypes: ['membership', 'partnership', 'ownership', 'family_relationship'],\n            linkColors: {\n                'membership': '#B0C4DE',     \n                'partnership': '#A8D4B2',    \n                'ownership': '#C7B8E0',       \n                'family_relationship': '#C2B8A3'\n            },\n            typeColors: {\n                'person': '#FFB6C1',\n                'organization': '#4ECDC4',\n                'company': '#45B7D1',\n                'political_organization': '#96CEB4',\n                'location': '#FFEEAD',\n                'vessel': '#D4A5A5',\n                'event': '#9B59B6',\n                'movement': '#3498DB',\n                'unknown': '#95A5A6'\n            }\n        }\n    },\n    computed: {\n        ...mapState(['filteredNodes', 'filteredLinks', 'links', 'nodes', 'selectedNodeId'])\n    },\n    methods: {\n        formatType(type) {\n            return type.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n        },\n        handleResize() {\n            const membershipContainer = document.getElementById('subgraph-membership')\n            const partnershipContainer = document.getElementById('subgraph-partnership')\n            const ownershipContainer = document.getElementById('subgraph-ownership')\n            const familyContainer = document.getElementById('subgraph-family-relationship')\n\n            const containers = {\n                'membership': membershipContainer,\n                'partnership': partnershipContainer,\n                'ownership': ownershipContainer,\n                'family_relationship': familyContainer\n            }\n\n            Object.entries(containers).forEach(([type, container]) => {\n                if (container) {\n                    const width = container.clientWidth\n                    const height = container.clientHeight\n\n                    // 更新SVG大小\n                    if (this.svgs[type]) {\n                        this.svgs[type]\n                            .attr('width', width)\n                            .attr('height', height)\n\n                        // 更新力导向图中心点\n                        if (this.simulations[type]) {\n                            this.simulations[type]\n                                .force('center', d3.forceCenter(width / 2, height / 2))\n                                .alpha(0.3)\n                                .restart()\n                        }\n                    }\n                }\n            })\n        },\n        async initSubgraphs() {\n            await this.$nextTick();\n            \n            const graphConfigs = [\n                { type: 'membership', id: 'subgraph-membership' },\n                { type: 'partnership', id: 'subgraph-partnership' },\n                { type: 'ownership', id: 'subgraph-ownership' },\n                { type: 'family_relationship', id: 'subgraph-family-relationship' }\n            ];\n\n            // 停止所有现有的模拟器\n            Object.values(this.simulations).forEach(sim => {\n                if (sim) sim.stop();\n            });\n            this.simulations = {};\n\n            graphConfigs.forEach(({ type, id }) => {\n                const container = d3.select(`#${id}`)\n                const element = container.node()\n                \n                if (!element) {\n                    console.warn(`Container for ${type} not found`)\n                    return\n                }\n\n                // 清除现有的SVG\n                container.selectAll(\"svg\").remove()\n\n                const width = element.clientWidth || 300\n                const height = element.clientHeight || 200\n\n                // 创建SVG\n                const svg = container.append('svg')\n                    .attr('width', '100%')\n                    .attr('height', '100%')\n                    .attr('viewBox', `0 0 ${width} ${height}`)\n                    .attr('preserveAspectRatio', 'xMidYMid meet')\n                    .style('display', 'block') // 确保SVG是块级元素\n\n                // 添加标题\n                svg.append('text')\n                    .attr('x', width / 2)\n                    .attr('y', 15)\n                    .attr('text-anchor', 'middle')\n                    .attr('dominant-baseline', 'middle')\n                    .style('font-size', '10px')\n                    .style('font-weight', 'bold')\n                    .text(this.formatType(type))\n\n                // 添加图形容器，并为标题留出空间\n                const graphContainer = svg.append('g')\n                    .attr('class', 'graph-container')\n                    .attr('transform', `translate(0, 25)`)\n\n                // 设置缩放行为\n                svg.call(d3.zoom()\n                    .scaleExtent([0.5, 4])\n                    .on('zoom', (event) => {\n                        graphContainer.attr('transform', event.transform)\n                    }))\n\n                this.svgs[type] = svg\n            })\n        },\n        updateSubgraphs() {\n            if (!this.filteredNodes || !this.filteredLinks) {\n                console.warn('No data available for updating subgraphs');\n                return;\n            }\n\n            // 停止所有现有的模拟器\n            Object.values(this.simulations).forEach(sim => {\n                if (sim) {\n                    sim.stop();\n                    sim.nodes().forEach(node => {\n                        node.fx = null;\n                        node.fy = null;\n                    });\n                }\n            });\n\n            this.linkTypes.forEach(type => {\n                // 过滤出当前类型的连接\n                const links = this.filteredLinks.filter(link => link.type === type)\n                console.log(type, 'links', links)\n                \n                const nodeIds = new Set()\n                links.forEach(link => {\n                    // 从 Proxy 对象中获取 id\n                    nodeIds.add(typeof link.source === 'object' ? link.source.id : link.source)\n                    nodeIds.add(typeof link.target === 'object' ? link.target.id : link.target)\n                })\n                console.log(type, 'nodeIds', nodeIds)\n                \n                const nodes = this.filteredNodes.filter(node => nodeIds.has(node.id))\n                console.log(type, 'nodes', nodes)\n\n                // 找出最大和最小连接数\n                const linkCounts = nodes.map(node => node.linkCount);\n                const maxLinks = Math.max(...linkCounts);\n                const minLinks = Math.min(...linkCounts);\n\n                // 创建半径的比例尺\n                const radiusScale = d3.scaleLinear()\n                    .domain([minLinks, maxLinks])\n                    .range([3, 10]); // 子图中节点范围小一些：3-10\n\n                const svg = this.svgs[type]\n                if (!svg) {\n                    console.warn(`SVG for ${type} not found`)\n                    return\n                }\n\n                const container = svg.select('.graph-container')\n                const width = svg.node().clientWidth\n                const height = svg.node().clientHeight - 20 // 减去标题的高度\n\n                // 清除之前的图形\n                container.selectAll(\"*\").remove()\n\n                // 计算布局参数\n                const radius = Math.min(width, height) * 0.35\n                const centerX = width / 2\n                const centerY = height / 2\n\n                // 计算节点位置\n                const connectedNodes = nodes.filter(d => d.isConnected)\n                const angleStep = (2 * Math.PI) / connectedNodes.length\n                connectedNodes.forEach((node, i) => {\n                    const angle = i * angleStep\n                    node.x = centerX + radius * Math.cos(angle)\n                    node.y = centerY + radius * Math.sin(angle)\n                })\n\n                // 将未连接的节点放在外圈\n                const unconnectedNodes = nodes.filter(d => !d.isConnected)\n                const outerRadius = radius * 1.5\n                unconnectedNodes.forEach((node, i) => {\n                    const angle = (i * 2 * Math.PI) / unconnectedNodes.length\n                    node.x = centerX + outerRadius * Math.cos(angle)\n                    node.y = centerY + outerRadius * Math.sin(angle)\n                })\n\n                // 绘制连接线\n                container.selectAll('.link')\n                    .data(links)\n                    .enter()\n                    .append('path')\n                    .attr('class', 'link')\n                    .attr('d', d => {\n                        const sourceX = d.source.x || centerX\n                        const sourceY = d.source.y || centerY\n                        const targetX = d.target.x || centerX\n                        const targetY = d.target.y || centerY\n                        const dx = targetX - sourceX\n                        const dy = targetY - sourceY\n                        const dr = Math.sqrt(dx * dx + dy * dy) * 1.5\n                        return `M${sourceX},${sourceY}A${dr},${dr} 0 0,1 ${targetX},${targetY}`\n                    })\n                    .style('fill', 'none')\n                    .style('stroke', d => d.weight > 0.99 ? '#FF0000' : this.linkColors[type])\n                    .style('stroke-opacity', d => d.weight > 0.99 ? 0.8 : 0.6)\n                    .style('stroke-width', d => {\n                        // 根据weight值计算线条宽度\n                        if (d.weight > 0.99) {\n                            return 3;  // 最大权重固定宽度\n                        } else if (d.weight > 0.7) {\n                            return 2.5;  // 较高权重\n                        } else if (d.weight > 0.4) {\n                            return 2;  // 中等权重\n                        } else if (d.weight > 0.2) {\n                            return 1.5;  // 较低权重\n                        }\n                        return 1;  // 最低权重\n                    })\n                    .on('mouseover', (event, d) => {\n                        // 高亮当前边\n                        d3.select(event.target)\n                            .transition()\n                            .duration(200)\n                            .style('stroke-opacity', 1)\n                            .style('stroke-width', d => d.weight > 0.99 ? d.weight * 4 : d.weight * 2);\n\n                        // 高亮相连节点\n                        container.selectAll('.node')\n                            .filter(node => node.id === d.source.id || node.id === d.target.id)\n                            .each((node, i, elements) => {\n                                const el = d3.select(elements[i]);\n                                el.select('circle')\n                                    .transition()\n                                    .duration(200)\n                                    .attr('r', node => radiusScale(node.linkCount) * 1.5);\n                            });\n\n                        // 显示tooltip\n                        const tooltip = d3.select('#subgraph-tooltip');\n                        tooltip.style('display', 'block')\n                            .html(`\n                                <div class=\"tooltip-content\">\n                                    <div data-label=\"Source\">source: ${d.source.id}</div>\n                                    <div data-label=\"Target\">target: ${d.target.id}</div>\n                                    <div data-label=\"Type\">type: ${d.type || 'Unknown'}</div>\n                                    <div data-label=\"Weight\">weight: ${d.weight?.toFixed(4) || 'N/A'}</div>\n                                </div>\n                            `)\n                            .style('left', (event.pageX + 10) + 'px')\n                            .style('top', (event.pageY - 10) + 'px');\n                    })\n                    .on('mouseout', (event, d) => {\n                        // 恢复边的样式\n                        d3.select(event.target)\n                            .transition()\n                            .duration(200)\n                            .style('stroke-opacity', d => d.weight > 0.99 ? 0.8 : 0.6)\n                            .style('stroke-width', d => d.weight > 0.99 ? d.weight * 3 : d.weight * 1.5);\n\n                        // 恢复节点样式\n                        container.selectAll('.node')\n                            .filter(node => node.id === d.source.id || node.id === d.target.id)\n                            .each((node, i, elements) => {\n                                const el = d3.select(elements[i]);\n                                el.select('circle')\n                                    .transition()\n                                    .duration(200)\n                                    .attr('r', node => radiusScale(node.linkCount));\n                            });\n\n                        // 隐藏tooltip\n                        d3.select('#subgraph-tooltip').style('display', 'none');\n                    });\n\n                // 创建节点组\n                const nodeGroups = container.selectAll('.node')\n                    .data(nodes)\n                    .enter()\n                    .append('g')\n                    .attr('class', 'node')\n                    .attr('transform', d => `translate(${d.x}, ${d.y})`);\n\n                // 添加节点圆圈\n                nodeGroups.append('circle')\n                    .attr('r', d => radiusScale(d.linkCount))\n                    .style('fill', d => this.typeColors[d.type])\n                    .style('stroke', '#fff')\n                    .style('stroke-width', '1.5px');\n\n                // 添加交互效果\n                nodeGroups\n                    .on('mouseover', (event, d) => {\n                        // 高亮当前节点\n                        const currentNode = d3.select(event.currentTarget);\n                        currentNode.select('circle')\n                            .transition()\n                            .duration(200)\n                            .attr('r', d => radiusScale(d.linkCount) * 1.5);\n\n                        // 高亮相关连接\n                        container.selectAll('.link')\n                            .filter(link => link.source.id === d.id || link.target.id === d.id)\n                            .transition()\n                            .duration(200)\n                            .style('stroke-opacity', 1)\n                            .style('stroke-width', link => link.weight > 0.99 ? link.weight * 4 : link.weight * 2);\n\n                        // 显示tooltip\n                        const tooltip = d3.select('#subgraph-tooltip');\n                        tooltip.style('display', 'block')\n                            .html(`\n                                <div class=\"tooltip-content\">\n                                    <div data-label=\"ID\">id: ${d.id}</div>\n                                    <div data-label=\"Type\">type: ${d.type || 'Unknown'}</div>\n                                    <div data-label=\"Country\">country: ${d.country || 'N/A'}</div>\n                                    <div data-label=\"Connections\">connections: ${d.linkCount}</div>\n                                </div>\n                            `)\n                            .style('left', (event.pageX + 10) + 'px')\n                            .style('top', (event.pageY - 10) + 'px');\n                    })\n                    .on('mouseout', (event, d) => {\n                        // 恢复节点样式\n                        const currentNode = d3.select(event.currentTarget);\n                        currentNode.select('circle')\n                            .transition()\n                            .duration(200)\n                            .attr('r', d => radiusScale(d.linkCount));\n\n                        // 恢复连接样式\n                        container.selectAll('.link')\n                            .filter(link => link.source.id === d.id || link.target.id === d.id)\n                            .transition()\n                            .duration(200)\n                            .style('stroke-opacity', d => d.weight > 0.99 ? 0.8 : 0.6)\n                            .style('stroke-width', d => d.weight > 0.99 ? d.weight * 3 : d.weight * 1.5);\n\n                        // 隐藏tooltip\n                        d3.select('#subgraph-tooltip').style('display', 'none');\n                    });\n\n                // 不需要保存模拟器引用，因为我们不使用力导向\n                this.simulations[type] = null\n            })\n        }\n    },\n    mounted() {\n        this.initSubgraphs()\n        window.addEventListener('resize', this.handleResize)\n    },\n    beforeUnmount() {\n        window.removeEventListener('resize', this.handleResize)\n        // 清理所有模拟器\n        Object.values(this.simulations).forEach(simulation => {\n            if (simulation) simulation.stop()\n        })\n    },\n    watch: {\n        filteredNodes: {\n            handler(newNodes, oldNodes) {\n                // 只有当节点数据真正改变时才更新\n                if (JSON.stringify(newNodes) !== JSON.stringify(oldNodes)) {\n                    this.updateSubgraphs()\n                }\n            },\n            deep: true\n        },\n        selectedNodeId: {\n            handler(newId) {\n                // 更新所有子图中的节点和边的样式\n                Object.values(this.svgs).forEach(svg => {\n                    // 更新节点样式\n                    svg.selectAll('.node circle')\n                        .transition()\n                        .duration(200)\n                        .style('stroke', d => d.id === newId ? '#FF0000' : '#fff')\n                        .style('stroke-width', d => d.id === newId ? 4 : 1.5);\n\n                    // 更新边的样式\n                    svg.selectAll('.link')\n                        .transition()\n                        .duration(200)\n                        .style('stroke-opacity', d => {\n                            const isConnected = d.source.id === newId || d.target.id === newId;\n                            if (isConnected) {\n                                return d.weight > 0.99 ? 1 : 0.9;\n                            }\n                            return d.weight > 0.99 ? 0.8 : 0.6;\n                        })\n                        .style('stroke', d => {\n                            const isConnected = d.source.id === newId || d.target.id === newId;\n                            if (!isConnected) {\n                                return d.weight > 0.99 ? '#FF0000' : this.linkColors[d.type];\n                            }\n                            // 高亮时使用加深的颜色\n                            switch(d.type) {\n                                case 'membership':\n                                    return '#6982B0';  // 加深的蓝灰色\n                                case 'partnership':\n                                    return '#5A8D6A';  // 加深的绿色\n                                case 'ownership':\n                                    return '#8B6BA8';  // 加深的紫色\n                                case 'family_relationship':\n                                    return '#8B7355';  // 加深的棕色\n                                default:\n                                    return '#666666';\n                            }\n                        })\n                        .style('stroke-width', d => {\n                            const isConnected = d.source.id === newId || d.target.id === newId;\n                            return isConnected ? (d.weight > 0.99 ? d.weight * 3 : d.weight * 2) : (d.weight > 0.99 ? d.weight * 3 : d.weight * 1.5);\n                        });\n                });\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n.subgraphs-container {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-rows: 1fr;\n    gap: 8px;\n    height: calc(100% - 5px);\n    width: calc(100% - 10px);\n    padding: 5px;\n    background: white;\n    box-sizing: border-box;\n}\n\n.subgraph {\n    background: white;\n    border-radius: 4px;\n    padding: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n    height: 100%;\n    width: 100%;\n    position: relative;\n    min-width: 0;\n    box-sizing: border-box;\n}\n\n.subgraph-vis {\n    width: 100%;\n    height: 100%;\n    border-radius: 3px;\n    position: relative;\n    overflow: hidden;\n    box-sizing: border-box;\n}\n\n/* 调整标题文字大小和位置 */\n.graph-container text {\n    font-size: 10px !important;\n}\n\n.node text {\n    pointer-events: none;\n    font-size: 7px !important;\n}\n\n.node circle {\n    stroke: #fff;\n    stroke-width: 1px;\n}\n\n.link {\n    stroke-opacity: 0.6;\n    fill: none;\n    stroke-width: 1px;\n}\n\n/* 确保SVG填充整个容器 */\nsvg {\n    width: 100% !important;\n    height: 100% !important;\n    display: block;\n}\n\n#subgraph-tooltip {\n    position: absolute;\n    display: none;\n    background: rgba(255, 255, 255, 0.98);\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    padding: 6px 10px;\n    font-size: 12px;\n    font-family: Arial, sans-serif;\n    pointer-events: none;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n    z-index: 1000;\n    width: auto;\n    height: auto;\n    white-space: nowrap;\n}\n\n.tooltip-content {\n    display: flex;\n    flex-direction: column;\n    gap: 2px;\n}\n\n.tooltip-content div {\n    display: flex;\n    gap: 8px;\n    padding: 1px 0;\n    white-space: nowrap;\n}\n\n.tooltip-content div::before {\n    content: attr(data-label);\n    color: #666;\n    font-weight: 500;\n    min-width: 70px;\n}\n</style> ","import { render } from \"./SubGraphs.vue?vue&type=template&id=63ea188a&scoped=true\"\nimport script from \"./SubGraphs.vue?vue&type=script&lang=js\"\nexport * from \"./SubGraphs.vue?vue&type=script&lang=js\"\n\nimport \"./SubGraphs.vue?vue&type=style&index=0&id=63ea188a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-63ea188a\"]])\n\nexport default __exports__","<template>\n  <div class=\"network-container\">\n    <div ref=\"graphContainer\" class=\"network-graph\"></div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport hierarchyData from '@/assets/tree_hierarchy.json'\nimport { mapState } from 'vuex'  // 添加 mapState\n\nexport default {\n  name: 'TreeNetworkGraph',\n  computed: {\n    ...mapState(['selectedNodeId', 'originalNodes', 'originalLinks']),\n  },\n  data() {\n    return {\n      hierarchyData: hierarchyData,\n      levelNodeCounts: {}, // 用于记录每个层级的节点计数\n      typeColors: {\n        'person': '#FFB6C1',\n        'organization': '#4ECDC4',\n        'company': '#45B7D1',\n        'political_organization': '#96CEB4',\n        'location': '#FFEEAD',\n        'vessel': '#D4A5A5',\n        'event': '#9B59B6',\n        'movement': '#3498DB',\n        'unknown': '#95A5A6'\n      },\n      linkColors: {\n        'membership': '#B0C4DE',     \n        'partnership': '#A8D4B2',    \n        'ownership': '#C7B8E0',       \n        'family_relationship': '#C2B8A3'  \n      }\n    }\n  },\n  mounted() {\n    this.renderTreeGraph()\n  },\n  methods: {\n    convertToD3Hierarchy(rootNodeData) {\n      if (!rootNodeData || rootNodeData.length === 0) {\n        return { name: this.selectedNodeId || 'Root', children: [] }\n      }\n\n      // 重置层级节点计数\n      this.levelNodeCounts = {}\n\n      const root = {\n        name: rootNodeData[0].name,\n        depth: 1,\n        children: [],\n        showLabel: true // 默认显示标签\n      }\n\n      const nodeMap = { [root.name]: root }\n      // 按深度排序节点，并只保留深度不超过3的节点\n      const sortedNodes = [...rootNodeData]\n        // .filter(node => node.depth <= 3)  // 限制最大深度为3\n        .sort((a, b) => a.depth - b.depth)\n\n      sortedNodes.forEach(node => {\n        if (node.depth === 1) return\n\n        const parentPath = node.path.slice(0, -1)\n        const parentName = parentPath[parentPath.length - 1]\n        const parent = nodeMap[parentName]\n\n        if (parent) {\n          // 更新层级节点计数\n          if (!this.levelNodeCounts[node.depth]) {\n            this.levelNodeCounts[node.depth] = 0\n          }\n          this.levelNodeCounts[node.depth] += 1\n\n          const childNode = {\n            name: node.name,\n            depth: node.depth,\n            children: [],\n            showLabel: this.levelNodeCounts[node.depth] <= 10 // 前10个节点显示标签\n          }\n          parent.children.push(childNode)\n          nodeMap[node.name] = childNode\n        }\n      })\n\n      return root\n    },\n\n    // 获取节点类型的辅助方法\n    getNodeType(nodeName) {\n      const node = this.originalNodes.find(n => (n.id).toString() === nodeName.toString())\n      const type = node ? node.type : 'unknown'\n      return type\n    },\n    // 获取连接类型的辅助方法\n    getLinkType(source, target) {\n      const link = this.originalLinks.find(l => \n        ((l.source).toString() === source.toString() && (l.target).toString() === target.toString()) || \n        ((l.source).toString() === target.toString() && (l.target).toString() === source.toString())\n      )\n      return link ? link.type : 'unknown'\n    },\n\n    renderTreeGraph() {\n      // 清除之前的图形\n      const container = this.$refs.graphContainer\n      d3.select(container).selectAll(\"*\").remove()\n      \n      // 检查是否有选中的节点和层级数据\n      if (!this.selectedNodeId || !this.hierarchyData) return\n\n      const rootNodeData = this.hierarchyData[this.selectedNodeId]\n      if (!rootNodeData) {\n        // 添加提示文本\n        const svg = d3.select(container)\n          .append(\"svg\")\n          .attr(\"width\", \"100%\")\n          .attr(\"height\", \"100%\")\n          .style(\"background\", \"#f9f9f9\")\n\n        // 添加提示文本\n        svg.append(\"text\")\n          .attr(\"x\", \"50%\")\n          .attr(\"y\", \"50%\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"dominant-baseline\", \"middle\")\n          .style(\"font-size\", \"16px\")\n          .style(\"fill\", \"#666\")\n          .text(\"There is no hierarchy data for this node\")\n          \n        return\n      }\n\n      // 转换为d3需要的层级结构\n      const root = this.convertToD3Hierarchy(rootNodeData)\n\n      // 获取容器尺寸\n      const width = container.clientWidth || 1200\n      const height = container.clientHeight || 800\n\n      // 创建SVG\n      const svg = d3.select(container)\n        .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .style(\"background\", \"#f9f9f9\")\n\n      // 创建内部分组\n      const g = svg.append(\"g\")\n        .attr(\"class\", \"graph-container\")\n\n      // 创建树状布局\n      const treeLayout = d3.tree()\n        .size([height * 0.8, width * 0.8])  // 使用更大的空间\n        .separation((a, b) => {\n          // 增加节点间的水平间距\n          return a.parent === b.parent ? 2 : 3;\n        })\n\n      // 创建层次数据\n      const hierarchy = d3.hierarchy(root)\n      \n      // 对每一层的子节点进行排序和限制\n      hierarchy.each(d => {\n        if (d.children) {\n          // 按照某种规则排序子节点（这里用名称排序）\n          d.children.sort((a, b) => a.data.name.localeCompare(b.data.name))\n          // 限制每层最多显示15个节点\n          if (d.children.length > 15) {\n            d.children = d.children.slice(0, 15)\n          }\n        }\n      })\n      \n      const treeData = treeLayout(hierarchy)\n\n      // 颜色比例尺\n      // const colorScale = d3.scaleOrdinal(d3.schemeTableau10)\n\n      // 绘制连接线\n      g.selectAll(\".link\")\n        .data(treeData.links())\n        .enter().append(\"path\")\n        .attr(\"class\", \"link\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", d => {\n          const linkType = this.getLinkType(d.source.data.name, d.target.data.name)\n          return this.linkColors[linkType] || '#aaa'\n        })\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"stroke-dasharray\", function(d) {\n          return d.target.depth % 2 === 0 ? \"3,3\" : \"none\"\n        })\n        .attr(\"d\", d3.linkHorizontal()\n          .x(d => d.y)\n          .y(d => d.x)\n        )\n\n      // 创建节点组\n      const node = g.selectAll(\".node\")\n        .data(treeData.descendants())\n        .enter().append(\"g\")\n        .attr(\"class\", \"node\")\n        .attr(\"transform\", d => `translate(${d.y},${d.x})`)\n\n      // 添加节点圆圈\n      node.append(\"circle\")\n        .attr(\"r\", d => 8 - d.depth)  // 根据深度调整大小\n        .attr(\"fill\", (d) => {\n          const type = this.getNodeType(d.data.name)\n          // 确保即使是unknown类型也返回一个有效的颜色\n          return this.typeColors[type] || this.typeColors['unknown']\n        })\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"stroke-width\", 1.5)\n        .style(\"cursor\", \"pointer\")\n        .on(\"mouseover\", function(event, d) {\n          d3.select(this)\n            .transition()\n            .duration(200)\n            .attr(\"r\", (8 - d.depth) * 1.5)\n            .attr(\"stroke-width\", 2)\n\n          // 显示文本\n          d3.select(this.parentNode).select(\"text\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1)\n            .style(\"font-weight\", \"bold\")\n        })\n        .on(\"mouseout\", function(event, d) {\n          d3.select(this)\n            .transition()\n            .duration(200)\n            .attr(\"r\", 8 - d.depth)\n            .attr(\"stroke-width\", 1.5)\n\n          // 如果不是叶子节点，恢复文本透明度\n          if (d.children) {\n            d3.select(this.parentNode).select(\"text\")\n              .transition()\n              .duration(200)\n              .style(\"opacity\", 0.7)\n              .style(\"font-weight\", \"normal\")\n          }\n        })\n\n      // 添加节点文本\n      node.append(\"text\")\n        .attr(\"dy\", \"0.31em\")\n        .attr(\"x\", d => d.children ? -12 : 12)\n        .attr(\"text-anchor\", d => d.children ? \"end\" : \"start\")\n        .text(d => d.data.name)\n        .attr(\"font-size\", d => Math.max(12 - d.depth * 1.5, 8))  // 根据深度调整字体大小，但不小于8px\n        .style(\"opacity\", d => d.children ? 0.7 : 1)  // 非叶子节点文本透明度降低\n        .style(\"pointer-events\", \"none\")\n        .style(\"text-shadow\", \"0 0 2px white\")\n        .style(\"font-family\", \"Arial, sans-serif\")\n       \n\n      // 添加缩放和平移功能\n      const zoom = d3.zoom()\n        .scaleExtent([0.3, 2])\n        .on(\"zoom\", (event) => {\n          g.attr(\"transform\", event.transform)\n        })\n\n      svg.call(zoom)\n\n      // 计算初始缩放和平移以适应视图\n      const bounds = g.node().getBBox()\n      const fullWidth = bounds.width\n      const fullHeight = bounds.height\n      const scale = Math.min(\n        width / fullWidth * 0.9,\n        height / fullHeight * 0.9\n      )\n      const x = (width - fullWidth * scale) / 2\n      const y = (height - fullHeight * scale) / 2\n\n      // 应用初始变换\n      svg.call(\n        zoom.transform,\n        d3.zoomIdentity\n          .translate(x, y)\n          .scale(scale)\n      )\n    }\n    \n  },\n  watch: {\n    selectedNodeId: {\n      handler() {\n        this.renderTreeGraph()\n      },\n      immediate: true\n    }\n  }\n}\n</script>\n\n<style scoped>\n.network-container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  font-family: 'Arial', sans-serif;\n}\n\n.controls {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n  background: linear-gradient(to right, #f5f7fa, #e4e8eb);\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n  margin-bottom: 10px;\n  gap: 10px;\n}\n\n.select-label {\n  font-size: 14px;\n  color: #555;\n  font-weight: 500;\n}\n\n.node-select {\n  padding: 8px 15px;\n  font-size: 14px;\n  border-radius: 20px;\n  border: 1px solid #d1d5db;\n  background: white;\n  min-width: 250px;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  transition: all 0.3s ease;\n}\n\n.node-select:focus {\n  outline: none;\n  border-color: #4f46e5;\n  box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.2);\n}\n\n.network-graph {\n  flex-grow: 1;\n  width: 100%;\n  height: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n  background: white;\n}\n</style>","import { render } from \"./NetworkGraph.vue?vue&type=template&id=35166c0a&scoped=true\"\nimport script from \"./NetworkGraph.vue?vue&type=script&lang=js\"\nexport * from \"./NetworkGraph.vue?vue&type=script&lang=js\"\n\nimport \"./NetworkGraph.vue?vue&type=style&index=0&id=35166c0a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-35166c0a\"]])\n\nexport default __exports__","<template>\n<div class=\"parallel-coordinates-container\">\n  <div ref=\"chartContainer\" class=\"scatter-plot\"></div>\n</div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport { mapState } from 'vuex'\nimport coefData from '@/assets/nodes_coef.json'\n\nexport default {\nname: 'ParallelCoordinates',\ndata() {\n  return {\n    coefData: coefData\n  }\n},\ncomputed: {\n  ...mapState(['selectedNodeId']),\n},\nmounted() {\n  this.renderChart()\n  window.addEventListener('resize', this.handleResize)\n},\nbeforeUnmount() {\n  window.removeEventListener('resize', this.handleResize)\n},\nmethods: {\n  createTopTenScale(data, topItems, range) {\n    const maxNormalValue = d3.max(\n      data.filter(d => !topItems.some(top => top === d))\n    )\n    \n    return d3.scaleLinear()\n      .domain([0, maxNormalValue, d3.max(data)])\n      .range([\n        range[0], \n        range[0] + (range[1] - range[0]) * 0.8, \n        range[1]\n      ])\n      .clamp(true)\n  },\n\n  renderChart() {\n    const data = this.coefData\n    if (!data || data.length === 0) return\n\n    d3.select(this.$refs.chartContainer).selectAll(\"*\").remove()\n\n    // 找出top 10数据\n    // 使用原始 ID 而不是索引\n    const topRaw = data\n      .map((d, index) => ({ ...d, originalIndex: index }))\n      .sort((a, b) => b.raw_score - a.raw_score)\n      .slice(0, 10)\n      .map(d => d.id)  // 使用原始 ID\n    \n    const topNorm = data\n      .map((d, index) => ({ ...d, originalIndex: index }))\n      .sort((a, b) => b.norm_score - a.norm_score)\n      .slice(0, 10)\n      .map(d => d.id)  // 使用原始 ID\n\n    const container = this.$refs.chartContainer\n    const width = container.clientWidth || 800\n    const height = container.clientHeight || 600\n    const margin = { top: 60, right: 60, bottom: 10, left: 60 }\n\n    const svg = d3.select(container)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .style(\"background\", \"#f9f9f9\")\n\n    const rawScores = data.map(d => d.raw_score)\n    const normScores = data.map(d => d.norm_score)\n\n    // 创建特殊的比例尺\n    const yRaw = this.createTopTenScale(\n      rawScores, \n      topRaw.map(id => data.find(d => d.id === id).raw_score), \n      [height - margin.bottom, margin.top]\n    )\n\n    const yNorm = this.createTopTenScale(\n      normScores, \n      topNorm.map(id => data.find(d => d.id === id).norm_score), \n      [height - margin.bottom, margin.top]\n    )\n\n    const x = d3.scalePoint()\n      .domain(data.map(d => d.id))  // 使用原始 ID 作为域\n      .range([margin.left, width - margin.right])\n\n    // 颜色比例尺\n    const color = d3.scaleOrdinal()\n      .domain([\"normal\", \"top-raw\", \"top-norm\"])\n      .range([\"#999\", \"#ff4d4d\", \"#4daf4d\"])\n\n    // 绘制连接线\n    svg.selectAll(\".connection-line\")\n      .data(data)\n      .enter()\n      .append(\"line\")\n      .attr(\"data-id\", d => String(d.id))  // 使用原始 ID \n      .attr(\"x1\", d => x(d.id))\n      .attr(\"y1\", d => yRaw(d.raw_score))\n      .attr(\"x2\", d => x(d.id))\n      .attr(\"y2\", d => yNorm(d.norm_score))\n      .attr(\"stroke\", d => {\n        if (topRaw.includes(d.id) || topNorm.includes(d.id)) return color(\"top-raw\")\n        return \"#ddd\"\n      })\n      .attr(\"stroke-width\", 1)\n      .attr(\"opacity\", 0.5)\n\n    \n\n    // 绘制Norm Score点\n    svg.selectAll(\".dot-norm\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"dot-norm\")\n      .attr(\"data-id\", d => String(d.id))  // 使用原始 ID \n      .attr(\"cx\", d => x(d.id))\n      .attr(\"cy\", d => yNorm(d.norm_score))\n      .attr(\"r\", 1)\n      .attr(\"fill\", d => {\n        if (topNorm.includes(d.id)) return color(\"top-norm\")\n        return color(\"normal\")\n      })\n      .attr(\"opacity\", 0.7)\n\n    // 绘制Raw Score点\n    svg.selectAll(\".dot-raw\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"dot-raw\")\n      .attr(\"data-id\", d => String(d.id))  // 使用原始 ID \n      .attr(\"cx\", d => x(d.id))\n      .attr(\"cy\", d => yRaw(d.raw_score))\n      .attr(\"r\", d => {\n        return topRaw.includes(d.id) ? 2 : 1\n      })\n      .attr(\"fill\", d => {\n        if (topRaw.includes(d.id)) return color(\"top-raw\")\n        return color(\"normal\")\n      })\n      .attr(\"opacity\", 0.7)  \n\n\n    // 坐标轴\n    const axisColor = \"#666\"\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(d3.axisLeft(yRaw).ticks(5))\n      .call(g => g.select(\".domain\").attr(\"stroke\", axisColor))\n      .call(g => g.selectAll(\".tick line\").attr(\"stroke\", axisColor))\n      .call(g => g.selectAll(\".tick text\").attr(\"fill\", axisColor))\n      .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -40)\n        .attr(\"x\", -height/2)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"Raw Score\")\n        .style(\"fill\", axisColor)\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${width - margin.right},0)`)\n      .call(d3.axisRight(yNorm).ticks(5))\n      .call(g => g.select(\".domain\").attr(\"stroke\", axisColor))\n      .call(g => g.selectAll(\".tick line\").attr(\"stroke\", axisColor))\n      .call(g => g.selectAll(\".tick text\").attr(\"fill\", axisColor))\n      .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 40)\n        .attr(\"x\", -height/2)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"Normalized Score\")\n        .style(\"fill\", axisColor)\n\n    // 图例\n    const legend = svg.append(\"g\")\n      .attr(\"transform\", `translate(${width - margin.right + 10}, ${margin.top})`)\n\n    // Top Raw Score图例\n    legend.append(\"circle\")\n      .attr(\"cx\", -width*2/3+30)\n      .attr(\"cy\", -height/10)\n      .attr(\"r\", 3)\n      .attr(\"fill\", color(\"top-raw\"))\n\n    legend.append(\"text\")\n      .attr(\"x\", -width*2/3+10+30)\n      .attr(\"y\", -height/10+4)\n      .text(\"Top 10 Points\")\n      .style(\"font-size\", \"10px\")\n\n    // Top Norm Score图例\n    legend.append(\"circle\")\n      .attr(\"cx\", -width*1/3+30)\n      .attr(\"cy\", -height/10)\n      .attr(\"r\", 3)\n      .attr(\"fill\", color(\"normal\"))\n\n    legend.append(\"text\")\n      .attr(\"x\", -width*1/3+10+30)\n      .attr(\"y\", -height/10+4)\n      .text(\"Other points\")\n      .style(\"font-size\", \"10px\")\n  },\n\n  highlightNode(newId) {\n    const data = this.coefData\n    if (!data || data.length === 0) return\n    \n    const svg = d3.select(this.$refs.chartContainer).select(\"svg\")\n    \n    // 移除之前的文本框\n    svg.selectAll(\".node-info-box\").remove()\n\n    const nodeData = this.coefData.find(d => String(d.id) === String(newId))\n    \n    if (!nodeData) return\n\n    // 找出top 10数据\n    // 使用原始 ID 而不是索引\n    const topRaw = data\n      .map((d, index) => ({ ...d, originalIndex: index }))\n      .sort((a, b) => b.raw_score - a.raw_score)\n      .slice(0, 10)\n      .map(d => d.id)  // 使用原始 ID\n\n    // 颜色比例尺\n    const color = d3.scaleOrdinal()\n      .domain([\"normal\", \"top-raw\", \"top-norm\"])\n      .range([\"#999\", \"#ff4d4d\", \"#4daf4d\"])\n\n    // 重置所有元素样式\n    svg.selectAll(\"[data-id]\")\n      .each(function() {\n        const el = d3.select(this)\n        \n        if (el.classed('dot-raw') || el.classed('dot-norm')) {\n          el.attr(\"r\", 1)\n            .attr(\"fill\", \"#999\")\n            .attr(\"opacity\", 0.5)\n            .attr(\"r\", d => {\n              return topRaw.includes(d.id) ? 2 : 1\n            })\n            .attr(\"fill\", d => {\n              if (topRaw.includes(d.id)) return color(\"top-raw\")\n              return color(\"normal\")\n            })\n        }\n\n        if (el.classed('connection-line')) {\n          el.attr(\"stroke\", \"#ddd\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"opacity\", 0.3)\n        }\n      })\n\n    // 只选择第一个匹配的点\n    const matchedElement = svg.selectAll(`[data-id=\"${newId}\"].dot-raw, [data-id=\"${newId}\"].dot-norm`)\n      .filter(function(d, i) {\n        return i === 0;  // 只选择第一个元素\n      })\n\n    if (matchedElement.empty()) return\n\n    // 高亮选中元素\n    matchedElement\n      .attr(\"r\", 4)\n      .attr(\"fill\", \"#40E0D0\")\n      .attr(\"opacity\", 1)\n\n    // 找到对应的连接线\n    const connectedLine = svg.select(`[data-id=\"${newId}\"].connection-line`)\n    if (!connectedLine.empty()) {\n      connectedLine\n        .attr(\"stroke\", \"#40E0D0\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"opacity\", 1)\n    }\n\n    // 创建文本框\n    const bx = parseFloat(matchedElement.attr('cx'))\n    const by = parseFloat(matchedElement.attr('cy'))\n\n    const infoBox = svg.append('g')\n      .attr('class', 'node-info-box')\n      .attr('transform', `translate(${bx + 10}, ${by - 40})`)\n\n    // 背景矩形\n    infoBox.append('rect')\n      .attr('width', 130)\n      .attr('height', 70)\n      .attr('fill', 'white')\n      .attr('stroke', '#333')\n      .attr('stroke-width', 1)\n      .attr('rx', 5)\n      .attr('ry', 5)\n      .attr('opacity', 0.6)\n\n    // 文本内容\n    const textData = [\n      `ID: ${nodeData.id}`,\n      `Raw Score: ${nodeData.raw_score.toFixed(2)}`,\n      `Norm Score: ${nodeData.norm_score.toFixed(2)}`\n    ]\n\n    infoBox.selectAll('text')\n      .data(textData)\n      .enter()\n      .append('text')\n      .attr('x', 10)\n      .attr('y', (d, i) => 20 + i * 18)\n      .attr('font-size', '10px')\n      .text(d => d)\n  }\n},\n\n// 监听 Vuex store 中的选中节点变化\nwatch: {\n  selectedNodeId: {\n    handler(newId) {\n      const stringId = String(newId)\n      this.highlightNode(stringId)\n    },\n    immediate: true\n  }\n}\n}\n</script>\n\n<style scoped>\n.parallel-coordinates-container {\nwidth: 100%;\nheight: 100%;\n}\n\n.scatter-plot {\nwidth: 100%;\nheight: 100%;\nborder: 1px solid #ddd;\nborder-radius: 1px;\nbackground: white;\n}\n</style>","import { render } from \"./ParallelCoordinates.vue?vue&type=template&id=e36c55a6&scoped=true\"\nimport script from \"./ParallelCoordinates.vue?vue&type=script&lang=js\"\nexport * from \"./ParallelCoordinates.vue?vue&type=script&lang=js\"\n\nimport \"./ParallelCoordinates.vue?vue&type=style&index=0&id=e36c55a6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e36c55a6\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=158e44b5\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=158e44b5&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createStore } from 'vuex'\n\nexport default createStore({\n    state: {\n        originalNodes: [],\n        originalLinks: [],\n        filteredNodes: [],\n        filteredLinks: [],\n        countries: [],\n        filterConditions: {\n            nodeTypes: [],\n            countries: [],\n            relations: []\n        },\n        selectedNodeId: null\n    },\n    mutations: {\n        setOriginalData(state, { nodes, links }) {\n            state.originalNodes = nodes\n            state.originalLinks = links\n        },\n        setFilteredData(state, { nodes, links }) {\n            state.filteredNodes = nodes\n            state.filteredLinks = links\n        },\n        setFilterConditions(state, conditions) {\n            state.filterConditions = { ...state.filterConditions, ...conditions }\n        },\n        setCountries(state, countries) {\n            state.countries = countries\n        },\n        setSelectedNodeId(state, nodeId) {\n            state.selectedNodeId = nodeId\n        }\n    },\n    actions: {\n        async loadData({ commit, dispatch }) {\n            try {\n                console.log('开始加载数据...');\n                const response = await fetch('/assets/mc1_clean.json');\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const data = await response.json();\n                console.log('节点数据加载成功，节点数量:', data.nodes.length);\n                console.log('连接数据加载成功，连接数量:', data.links.length);\n                \n                // 验证数据格式\n                if (!Array.isArray(data.nodes) || !Array.isArray(data.links)) {\n                    throw new Error('数据格式错误：nodes 和 links 必须是数组');\n                }\n                \n                // 设置原始数据\n                commit('setOriginalData', {\n                    nodes: data.nodes,\n                    links: data.links\n                });\n\n                // 设置默认筛选条件\n                commit('setFilterConditions', {\n                    nodeTypes: ['person', 'organization'],\n                    countries: [] // 国家数据还未加载，先设为空\n                });\n\n                // 加载国家数据\n                const countryResponse = await fetch('/assets/country_counts.csv');\n                if (!countryResponse.ok) {\n                    throw new Error(`HTTP error! status: ${countryResponse.status}`);\n                }\n                const countryText = await countryResponse.text();\n                const countries = countryText.split('\\n')\n                    .slice(1) // 跳过标题行\n                    .filter(line => line.trim()) // 过滤空行\n                    .map(line => {\n                        const [country, count] = line.split(',');\n                        return {\n                            value: country,\n                            label: `${country} (${count})`\n                        };\n                    });\n                \n                console.log('国家数据加载成功，数量:', countries.length);\n                commit('setCountries', countries);\n\n                // 更新筛选条件中的国家（选择所有国家）\n                commit('setFilterConditions', {\n                    countries: countries.map(country => country.value)\n                });\n                \n                // 应用筛选\n                dispatch('applyFilters');\n                \n                console.log('所有数据已成功提交到 store');\n            } catch (error) {\n                console.error('加载数据失败:', error);\n                console.error('错误详情:', error.message);\n                if (error.stack) {\n                    console.error('错误堆栈:', error.stack);\n                }\n            }\n        },\n        applyFilters({state, commit}) {\n            const {nodeTypes, countries} = state.filterConditions;\n            console.log('应用筛选条件:', { nodeTypes, countries });\n\n            // 检查是否选择了所有国家\n            const isAllCountriesSelected = countries.length === state.countries.length;\n            console.log('是否选择所有国家:', isAllCountriesSelected);\n\n            // 计算每个节点的连接数\n            const nodeLinkCounts = {};\n            state.originalLinks.forEach(link => {\n                const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n                const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n                nodeLinkCounts[sourceId] = (nodeLinkCounts[sourceId] || 0) + 1;\n                nodeLinkCounts[targetId] = (nodeLinkCounts[targetId] || 0) + 1;\n            });\n\n            // 首先过滤节点，并添加连接数属性\n            const filteredNodes = state.originalNodes.filter(node => {\n                // 连接数筛选\n                const linkCount = nodeLinkCounts[node.id] || 0;\n                const linkCountMatch = linkCount >= 5;\n                \n                // 节点类型筛选\n                const typeMatch = nodeTypes.includes(node.type);\n                \n                // 国家筛选：   \n                const countryMatch = \n                    isAllCountriesSelected || \n                    countries.length === 0 || \n                    countries.includes(node.country);\n                \n                if (linkCountMatch && typeMatch && countryMatch) {\n                    // 添加连接数属性\n                    node.linkCount = linkCount;\n                    return true;\n                }\n                return false;\n            });\n\n            // 获取过滤后节点的ID集合\n            const filteredNodeIds = new Set(filteredNodes.map(node => node.id));\n            \n            // 过滤连接：只保留两端都在过滤后节点集合中的连接\n            const filteredLinks = state.originalLinks.filter(link => {\n                const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n                const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n                return filteredNodeIds.has(sourceId) && filteredNodeIds.has(targetId);\n            });\n\n            console.log('筛选后的数据:', {\n                nodes: filteredNodes.length,\n                links: filteredLinks.length,\n                removedNodes: state.originalNodes.length - filteredNodes.length,\n                removedLinks: state.originalLinks.length - filteredLinks.length\n            });\n\n            // 更新过滤后的数据\n            commit('setFilteredData', {\n                nodes: filteredNodes,\n                links: filteredLinks\n            });\n        }\n    }\n})","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport * as echarts from 'echarts'\n\n\nconst app = createApp(App)\napp.use(store)\napp.use(ElementPlus)\napp.config.globalProperties.$echarts = echarts\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvis_project\"] = self[\"webpackChunkvis_project\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9943); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_FilterPanel","_hoisted_6","_component_FDG","_hoisted_7","_hoisted_8","_component_SubGraphs","_hoisted_9","_hoisted_10","_component_NetworkGraph","_hoisted_11","_component_ParallelCoordinates","nodes","$setup","coefData","key","_Fragment","_renderList","$data","node","value","type","_cache","$event","selectedNodes","_toDisplayString","label","style","_normalizeStyle","backgroundColor","typeColors","mounted","_component_el_select","modelValue","selectedCountries","multiple","clearable","placeholder","teleported","popperOptions","header","_withCtx","_component_el_checkbox","checkAll","indeterminate","onChange","$options","handleCheckAll","default","_createTextVNode","_","_ctx","countries","country","_createBlock","_component_el_option","_createCommentVNode","name","components","ElSelect","ElOption","ElCheckbox","computed","mapState","nodeTypes","Set","this","originalNodes","map","filter","Boolean","data","selectedRelations","relations","$nextTick","watch","console","log","handleFilterChange","handler","val","length","deep","immediate","newCountries","methods","mapActions","$store","commit","applyFilters","__exports__","simulation","svg","width","height","currentNodes","linkColors","container","document","getElementById","clientWidth","clientHeight","initGraph","handleResize","window","addEventListener","beforeUnmount","removeEventListener","filteredNodes","newNodes","updateVisualization","selectedNodeId","newId","selectAll","transition","duration","d","attr","force","d3","alpha","restart","append","call","scaleExtent","on","event","select","transform","createGraph","data_nodes","data_links","filteredLinks","linkCounts","linkCount","maxLinks","Math","max","minLinks","min","radiusScale","domain","range","nodeCounts","sort","a","b","slice","count","weights","weight","maxWeight","minWeight","distanceScale","distance","strength","distanceMin","distanceMax","radius","alphaDecay","velocityDecay","forEach","fx","fy","self","links","enter","target","source","each","i","elements","el","tooltip","html","toFixed","pageX","pageY","size","dragStarted","dragged","dragEnded","handleNodeClick","preventDefault","cycles","findCycles","highlightCycles","clearHighlights","currentNode","currentTarget","link","x","y","active","alphaTarget","stop","remove","startNodeId","visited","path","pathSet","adjList","Map","has","set","get","push","dfs","nodeId","parent","add","neighbors","neighbor","cycleStart","indexOf","cycle","pop","delete","clickedNodeId","cycleNodes","flat","cycleEdges","edgeId1","edgeId2","_createStaticVNode","simulations","svgs","linkTypes","formatType","split","word","charAt","toUpperCase","join","membershipContainer","partnershipContainer","ownershipContainer","familyContainer","containers","Object","entries","initSubgraphs","graphConfigs","values","sim","element","warn","text","graphContainer","updateSubgraphs","nodeIds","centerX","centerY","connectedNodes","isConnected","angleStep","PI","angle","cos","sin","unconnectedNodes","outerRadius","sourceX","sourceY","targetX","targetY","dx","dy","dr","sqrt","nodeGroups","oldNodes","JSON","stringify","ref","hierarchyData","levelNodeCounts","renderTreeGraph","convertToD3Hierarchy","rootNodeData","children","root","depth","showLabel","nodeMap","sortedNodes","parentPath","parentName","childNode","getNodeType","nodeName","find","n","toString","getLinkType","originalLinks","l","$refs","g","treeLayout","separation","hierarchy","localeCompare","treeData","linkType","descendants","parentNode","zoom","bounds","getBBox","fullWidth","fullHeight","scale","translate","renderChart","createTopTenScale","topItems","maxNormalValue","some","top","clamp","chartContainer","topRaw","index","originalIndex","raw_score","topNorm","norm_score","margin","right","bottom","left","rawScores","normScores","yRaw","yNorm","color","String","includes","axisColor","ticks","legend","highlightNode","nodeData","classed","matchedElement","empty","connectedLine","bx","parseFloat","by","infoBox","textData","stringId","FilterPanel","FDG","SubGraphs","NetworkGraph","ParallelCoordinates","setup","store","useStore","linksData","nodesData","dispatch","render","createStore","state","filterConditions","mutations","setOriginalData","setFilteredData","setFilterConditions","conditions","setCountries","setSelectedNodeId","actions","loadData","response","fetch","ok","Error","status","json","Array","isArray","countryResponse","countryText","line","trim","error","message","stack","isAllCountriesSelected","nodeLinkCounts","sourceId","targetId","linkCountMatch","typeMatch","countryMatch","filteredNodeIds","removedNodes","removedLinks","app","createApp","App","use","ElementPlus","config","globalProperties","$echarts","echarts","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","getter","__esModule","definition","o","defineProperty","enumerable","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}